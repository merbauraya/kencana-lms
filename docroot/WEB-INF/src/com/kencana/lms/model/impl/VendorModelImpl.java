/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model.impl;

import com.kencana.lms.model.Vendor;
import com.kencana.lms.model.VendorModel;
import com.kencana.lms.model.VendorSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Vendor service. Represents a row in the &quot;Kencana_Vendor&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.kencana.lms.model.VendorModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VendorImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see VendorImpl
 * @see com.kencana.lms.model.Vendor
 * @see com.kencana.lms.model.VendorModel
 * @generated
 */
@JSON(strict = true)
public class VendorModelImpl extends BaseModelImpl<Vendor>
	implements VendorModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vendor model instance should use the {@link com.kencana.lms.model.Vendor} interface instead.
	 */
	public static final String TABLE_NAME = "Kencana_Vendor";
	public static final Object[][] TABLE_COLUMNS = {
			{ "vendorId", Types.BIGINT },
			{ "vendorCode", Types.VARCHAR },
			{ "vendorName", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "url", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "address1", Types.VARCHAR },
			{ "address2", Types.VARCHAR },
			{ "address3", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "zipcode", Types.VARCHAR },
			{ "contactPerson", Types.VARCHAR },
			{ "phone", Types.VARCHAR },
			{ "fax", Types.VARCHAR },
			{ "isPublisher", Types.BOOLEAN },
			{ "isBinder", Types.BOOLEAN },
			{ "isActive", Types.BOOLEAN },
			{ "rating", Types.VARCHAR },
			{ "bankName", Types.VARCHAR },
			{ "bankAccount", Types.VARCHAR },
			{ "lastOrderDate", Types.TIMESTAMP },
			{ "note", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Kencana_Vendor (vendorId LONG not null primary key,vendorCode VARCHAR(75) null,vendorName VARCHAR(75) null,email VARCHAR(75) null,url STRING null,companyId LONG,groupId LONG,address1 VARCHAR(75) null,address2 VARCHAR(75) null,address3 VARCHAR(75) null,city VARCHAR(75) null,zipcode VARCHAR(75) null,contactPerson VARCHAR(75) null,phone VARCHAR(75) null,fax VARCHAR(75) null,isPublisher BOOLEAN,isBinder BOOLEAN,isActive BOOLEAN,rating VARCHAR(75) null,bankName VARCHAR(75) null,bankAccount VARCHAR(75) null,lastOrderDate DATE null,note STRING null)";
	public static final String TABLE_SQL_DROP = "drop table Kencana_Vendor";
	public static final String ORDER_BY_JPQL = " ORDER BY vendor.vendorId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Kencana_Vendor.vendorId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.kencana.lms.model.Vendor"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.kencana.lms.model.Vendor"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.kencana.lms.model.Vendor"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long VENDORNAME_COLUMN_BITMASK = 2L;
	public static long VENDORID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Vendor toModel(VendorSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Vendor model = new VendorImpl();

		model.setVendorId(soapModel.getVendorId());
		model.setVendorCode(soapModel.getVendorCode());
		model.setVendorName(soapModel.getVendorName());
		model.setEmail(soapModel.getEmail());
		model.setUrl(soapModel.getUrl());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setAddress1(soapModel.getAddress1());
		model.setAddress2(soapModel.getAddress2());
		model.setAddress3(soapModel.getAddress3());
		model.setCity(soapModel.getCity());
		model.setZipcode(soapModel.getZipcode());
		model.setContactPerson(soapModel.getContactPerson());
		model.setPhone(soapModel.getPhone());
		model.setFax(soapModel.getFax());
		model.setIsPublisher(soapModel.getIsPublisher());
		model.setIsBinder(soapModel.getIsBinder());
		model.setIsActive(soapModel.getIsActive());
		model.setRating(soapModel.getRating());
		model.setBankName(soapModel.getBankName());
		model.setBankAccount(soapModel.getBankAccount());
		model.setLastOrderDate(soapModel.getLastOrderDate());
		model.setNote(soapModel.getNote());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Vendor> toModels(VendorSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Vendor> models = new ArrayList<Vendor>(soapModels.length);

		for (VendorSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.kencana.lms.model.Vendor"));

	public VendorModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _vendorId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setVendorId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _vendorId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Vendor.class;
	}

	@Override
	public String getModelClassName() {
		return Vendor.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("vendorId", getVendorId());
		attributes.put("vendorCode", getVendorCode());
		attributes.put("vendorName", getVendorName());
		attributes.put("email", getEmail());
		attributes.put("url", getUrl());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("address1", getAddress1());
		attributes.put("address2", getAddress2());
		attributes.put("address3", getAddress3());
		attributes.put("city", getCity());
		attributes.put("zipcode", getZipcode());
		attributes.put("contactPerson", getContactPerson());
		attributes.put("phone", getPhone());
		attributes.put("fax", getFax());
		attributes.put("isPublisher", getIsPublisher());
		attributes.put("isBinder", getIsBinder());
		attributes.put("isActive", getIsActive());
		attributes.put("rating", getRating());
		attributes.put("bankName", getBankName());
		attributes.put("bankAccount", getBankAccount());
		attributes.put("lastOrderDate", getLastOrderDate());
		attributes.put("note", getNote());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long vendorId = (Long)attributes.get("vendorId");

		if (vendorId != null) {
			setVendorId(vendorId);
		}

		String vendorCode = (String)attributes.get("vendorCode");

		if (vendorCode != null) {
			setVendorCode(vendorCode);
		}

		String vendorName = (String)attributes.get("vendorName");

		if (vendorName != null) {
			setVendorName(vendorName);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String url = (String)attributes.get("url");

		if (url != null) {
			setUrl(url);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String address1 = (String)attributes.get("address1");

		if (address1 != null) {
			setAddress1(address1);
		}

		String address2 = (String)attributes.get("address2");

		if (address2 != null) {
			setAddress2(address2);
		}

		String address3 = (String)attributes.get("address3");

		if (address3 != null) {
			setAddress3(address3);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String zipcode = (String)attributes.get("zipcode");

		if (zipcode != null) {
			setZipcode(zipcode);
		}

		String contactPerson = (String)attributes.get("contactPerson");

		if (contactPerson != null) {
			setContactPerson(contactPerson);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}

		String fax = (String)attributes.get("fax");

		if (fax != null) {
			setFax(fax);
		}

		Boolean isPublisher = (Boolean)attributes.get("isPublisher");

		if (isPublisher != null) {
			setIsPublisher(isPublisher);
		}

		Boolean isBinder = (Boolean)attributes.get("isBinder");

		if (isBinder != null) {
			setIsBinder(isBinder);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		String rating = (String)attributes.get("rating");

		if (rating != null) {
			setRating(rating);
		}

		String bankName = (String)attributes.get("bankName");

		if (bankName != null) {
			setBankName(bankName);
		}

		String bankAccount = (String)attributes.get("bankAccount");

		if (bankAccount != null) {
			setBankAccount(bankAccount);
		}

		Date lastOrderDate = (Date)attributes.get("lastOrderDate");

		if (lastOrderDate != null) {
			setLastOrderDate(lastOrderDate);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}
	}

	@JSON
	@Override
	public long getVendorId() {
		return _vendorId;
	}

	@Override
	public void setVendorId(long vendorId) {
		_vendorId = vendorId;
	}

	@JSON
	@Override
	public String getVendorCode() {
		if (_vendorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _vendorCode;
		}
	}

	@Override
	public void setVendorCode(String vendorCode) {
		_vendorCode = vendorCode;
	}

	@JSON
	@Override
	public String getVendorName() {
		if (_vendorName == null) {
			return StringPool.BLANK;
		}
		else {
			return _vendorName;
		}
	}

	@Override
	public void setVendorName(String vendorName) {
		_columnBitmask |= VENDORNAME_COLUMN_BITMASK;

		if (_originalVendorName == null) {
			_originalVendorName = _vendorName;
		}

		_vendorName = vendorName;
	}

	public String getOriginalVendorName() {
		return GetterUtil.getString(_originalVendorName);
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getUrl() {
		if (_url == null) {
			return StringPool.BLANK;
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		_url = url;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public String getAddress1() {
		if (_address1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address1;
		}
	}

	@Override
	public void setAddress1(String address1) {
		_address1 = address1;
	}

	@JSON
	@Override
	public String getAddress2() {
		if (_address2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address2;
		}
	}

	@Override
	public void setAddress2(String address2) {
		_address2 = address2;
	}

	@JSON
	@Override
	public String getAddress3() {
		if (_address3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _address3;
		}
	}

	@Override
	public void setAddress3(String address3) {
		_address3 = address3;
	}

	@JSON
	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@JSON
	@Override
	public String getZipcode() {
		if (_zipcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _zipcode;
		}
	}

	@Override
	public void setZipcode(String zipcode) {
		_zipcode = zipcode;
	}

	@JSON
	@Override
	public String getContactPerson() {
		if (_contactPerson == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactPerson;
		}
	}

	@Override
	public void setContactPerson(String contactPerson) {
		_contactPerson = contactPerson;
	}

	@JSON
	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@JSON
	@Override
	public String getFax() {
		if (_fax == null) {
			return StringPool.BLANK;
		}
		else {
			return _fax;
		}
	}

	@Override
	public void setFax(String fax) {
		_fax = fax;
	}

	@JSON
	@Override
	public boolean getIsPublisher() {
		return _isPublisher;
	}

	@Override
	public boolean isIsPublisher() {
		return _isPublisher;
	}

	@Override
	public void setIsPublisher(boolean isPublisher) {
		_isPublisher = isPublisher;
	}

	@JSON
	@Override
	public boolean getIsBinder() {
		return _isBinder;
	}

	@Override
	public boolean isIsBinder() {
		return _isBinder;
	}

	@Override
	public void setIsBinder(boolean isBinder) {
		_isBinder = isBinder;
	}

	@JSON
	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		_isActive = isActive;
	}

	@JSON
	@Override
	public String getRating() {
		if (_rating == null) {
			return StringPool.BLANK;
		}
		else {
			return _rating;
		}
	}

	@Override
	public void setRating(String rating) {
		_rating = rating;
	}

	@JSON
	@Override
	public String getBankName() {
		if (_bankName == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankName;
		}
	}

	@Override
	public void setBankName(String bankName) {
		_bankName = bankName;
	}

	@JSON
	@Override
	public String getBankAccount() {
		if (_bankAccount == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankAccount;
		}
	}

	@Override
	public void setBankAccount(String bankAccount) {
		_bankAccount = bankAccount;
	}

	@JSON
	@Override
	public Date getLastOrderDate() {
		return _lastOrderDate;
	}

	@Override
	public void setLastOrderDate(Date lastOrderDate) {
		_lastOrderDate = lastOrderDate;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Vendor.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Vendor toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Vendor)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VendorImpl vendorImpl = new VendorImpl();

		vendorImpl.setVendorId(getVendorId());
		vendorImpl.setVendorCode(getVendorCode());
		vendorImpl.setVendorName(getVendorName());
		vendorImpl.setEmail(getEmail());
		vendorImpl.setUrl(getUrl());
		vendorImpl.setCompanyId(getCompanyId());
		vendorImpl.setGroupId(getGroupId());
		vendorImpl.setAddress1(getAddress1());
		vendorImpl.setAddress2(getAddress2());
		vendorImpl.setAddress3(getAddress3());
		vendorImpl.setCity(getCity());
		vendorImpl.setZipcode(getZipcode());
		vendorImpl.setContactPerson(getContactPerson());
		vendorImpl.setPhone(getPhone());
		vendorImpl.setFax(getFax());
		vendorImpl.setIsPublisher(getIsPublisher());
		vendorImpl.setIsBinder(getIsBinder());
		vendorImpl.setIsActive(getIsActive());
		vendorImpl.setRating(getRating());
		vendorImpl.setBankName(getBankName());
		vendorImpl.setBankAccount(getBankAccount());
		vendorImpl.setLastOrderDate(getLastOrderDate());
		vendorImpl.setNote(getNote());

		vendorImpl.resetOriginalValues();

		return vendorImpl;
	}

	@Override
	public int compareTo(Vendor vendor) {
		long primaryKey = vendor.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Vendor)) {
			return false;
		}

		Vendor vendor = (Vendor)obj;

		long primaryKey = vendor.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VendorModelImpl vendorModelImpl = this;

		vendorModelImpl._originalVendorName = vendorModelImpl._vendorName;

		vendorModelImpl._originalCompanyId = vendorModelImpl._companyId;

		vendorModelImpl._setOriginalCompanyId = false;

		vendorModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Vendor> toCacheModel() {
		VendorCacheModel vendorCacheModel = new VendorCacheModel();

		vendorCacheModel.vendorId = getVendorId();

		vendorCacheModel.vendorCode = getVendorCode();

		String vendorCode = vendorCacheModel.vendorCode;

		if ((vendorCode != null) && (vendorCode.length() == 0)) {
			vendorCacheModel.vendorCode = null;
		}

		vendorCacheModel.vendorName = getVendorName();

		String vendorName = vendorCacheModel.vendorName;

		if ((vendorName != null) && (vendorName.length() == 0)) {
			vendorCacheModel.vendorName = null;
		}

		vendorCacheModel.email = getEmail();

		String email = vendorCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			vendorCacheModel.email = null;
		}

		vendorCacheModel.url = getUrl();

		String url = vendorCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			vendorCacheModel.url = null;
		}

		vendorCacheModel.companyId = getCompanyId();

		vendorCacheModel.groupId = getGroupId();

		vendorCacheModel.address1 = getAddress1();

		String address1 = vendorCacheModel.address1;

		if ((address1 != null) && (address1.length() == 0)) {
			vendorCacheModel.address1 = null;
		}

		vendorCacheModel.address2 = getAddress2();

		String address2 = vendorCacheModel.address2;

		if ((address2 != null) && (address2.length() == 0)) {
			vendorCacheModel.address2 = null;
		}

		vendorCacheModel.address3 = getAddress3();

		String address3 = vendorCacheModel.address3;

		if ((address3 != null) && (address3.length() == 0)) {
			vendorCacheModel.address3 = null;
		}

		vendorCacheModel.city = getCity();

		String city = vendorCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			vendorCacheModel.city = null;
		}

		vendorCacheModel.zipcode = getZipcode();

		String zipcode = vendorCacheModel.zipcode;

		if ((zipcode != null) && (zipcode.length() == 0)) {
			vendorCacheModel.zipcode = null;
		}

		vendorCacheModel.contactPerson = getContactPerson();

		String contactPerson = vendorCacheModel.contactPerson;

		if ((contactPerson != null) && (contactPerson.length() == 0)) {
			vendorCacheModel.contactPerson = null;
		}

		vendorCacheModel.phone = getPhone();

		String phone = vendorCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			vendorCacheModel.phone = null;
		}

		vendorCacheModel.fax = getFax();

		String fax = vendorCacheModel.fax;

		if ((fax != null) && (fax.length() == 0)) {
			vendorCacheModel.fax = null;
		}

		vendorCacheModel.isPublisher = getIsPublisher();

		vendorCacheModel.isBinder = getIsBinder();

		vendorCacheModel.isActive = getIsActive();

		vendorCacheModel.rating = getRating();

		String rating = vendorCacheModel.rating;

		if ((rating != null) && (rating.length() == 0)) {
			vendorCacheModel.rating = null;
		}

		vendorCacheModel.bankName = getBankName();

		String bankName = vendorCacheModel.bankName;

		if ((bankName != null) && (bankName.length() == 0)) {
			vendorCacheModel.bankName = null;
		}

		vendorCacheModel.bankAccount = getBankAccount();

		String bankAccount = vendorCacheModel.bankAccount;

		if ((bankAccount != null) && (bankAccount.length() == 0)) {
			vendorCacheModel.bankAccount = null;
		}

		Date lastOrderDate = getLastOrderDate();

		if (lastOrderDate != null) {
			vendorCacheModel.lastOrderDate = lastOrderDate.getTime();
		}
		else {
			vendorCacheModel.lastOrderDate = Long.MIN_VALUE;
		}

		vendorCacheModel.note = getNote();

		String note = vendorCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			vendorCacheModel.note = null;
		}

		return vendorCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{vendorId=");
		sb.append(getVendorId());
		sb.append(", vendorCode=");
		sb.append(getVendorCode());
		sb.append(", vendorName=");
		sb.append(getVendorName());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", url=");
		sb.append(getUrl());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", address1=");
		sb.append(getAddress1());
		sb.append(", address2=");
		sb.append(getAddress2());
		sb.append(", address3=");
		sb.append(getAddress3());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", zipcode=");
		sb.append(getZipcode());
		sb.append(", contactPerson=");
		sb.append(getContactPerson());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append(", fax=");
		sb.append(getFax());
		sb.append(", isPublisher=");
		sb.append(getIsPublisher());
		sb.append(", isBinder=");
		sb.append(getIsBinder());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", rating=");
		sb.append(getRating());
		sb.append(", bankName=");
		sb.append(getBankName());
		sb.append(", bankAccount=");
		sb.append(getBankAccount());
		sb.append(", lastOrderDate=");
		sb.append(getLastOrderDate());
		sb.append(", note=");
		sb.append(getNote());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.kencana.lms.model.Vendor");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>vendorId</column-name><column-value><![CDATA[");
		sb.append(getVendorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vendorCode</column-name><column-value><![CDATA[");
		sb.append(getVendorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vendorName</column-name><column-value><![CDATA[");
		sb.append(getVendorName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>url</column-name><column-value><![CDATA[");
		sb.append(getUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address1</column-name><column-value><![CDATA[");
		sb.append(getAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address2</column-name><column-value><![CDATA[");
		sb.append(getAddress2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address3</column-name><column-value><![CDATA[");
		sb.append(getAddress3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zipcode</column-name><column-value><![CDATA[");
		sb.append(getZipcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPerson</column-name><column-value><![CDATA[");
		sb.append(getContactPerson());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fax</column-name><column-value><![CDATA[");
		sb.append(getFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isPublisher</column-name><column-value><![CDATA[");
		sb.append(getIsPublisher());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isBinder</column-name><column-value><![CDATA[");
		sb.append(getIsBinder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rating</column-name><column-value><![CDATA[");
		sb.append(getRating());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankName</column-name><column-value><![CDATA[");
		sb.append(getBankName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankAccount</column-name><column-value><![CDATA[");
		sb.append(getBankAccount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastOrderDate</column-name><column-value><![CDATA[");
		sb.append(getLastOrderDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Vendor.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Vendor.class };
	private long _vendorId;
	private String _vendorCode;
	private String _vendorName;
	private String _originalVendorName;
	private String _email;
	private String _url;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private String _address1;
	private String _address2;
	private String _address3;
	private String _city;
	private String _zipcode;
	private String _contactPerson;
	private String _phone;
	private String _fax;
	private boolean _isPublisher;
	private boolean _isBinder;
	private boolean _isActive;
	private String _rating;
	private String _bankName;
	private String _bankAccount;
	private Date _lastOrderDate;
	private String _note;
	private long _columnBitmask;
	private Vendor _escapedModel;
}