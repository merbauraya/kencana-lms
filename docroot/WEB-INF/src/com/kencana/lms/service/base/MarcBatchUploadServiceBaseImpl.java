/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.service.base;

import com.kencana.lms.model.MarcBatchUpload;
import com.kencana.lms.service.MarcBatchUploadService;
import com.kencana.lms.service.persistence.CatalogItemPersistence;
import com.kencana.lms.service.persistence.CatalogPersistence;
import com.kencana.lms.service.persistence.CatalogTemplatePersistence;
import com.kencana.lms.service.persistence.CatalogTemplateSubfieldPersistence;
import com.kencana.lms.service.persistence.CatalogTemplateTagPersistence;
import com.kencana.lms.service.persistence.CircTransHistoryPersistence;
import com.kencana.lms.service.persistence.CirculationRulePersistence;
import com.kencana.lms.service.persistence.CirculationTransPersistence;
import com.kencana.lms.service.persistence.ItemCategoryPersistence;
import com.kencana.lms.service.persistence.ItemTypePersistence;
import com.kencana.lms.service.persistence.LibraryPersistence;
import com.kencana.lms.service.persistence.LocationPersistence;
import com.kencana.lms.service.persistence.MarcBatchUploadItemPersistence;
import com.kencana.lms.service.persistence.MarcBatchUploadPersistence;
import com.kencana.lms.service.persistence.MarcSubfieldPersistence;
import com.kencana.lms.service.persistence.MarcTagPersistence;
import com.kencana.lms.service.persistence.PatronCategoryPersistence;
import com.kencana.lms.service.persistence.PatronPersistence;
import com.kencana.lms.service.persistence.PatronStatusPersistence;
import com.kencana.lms.service.persistence.ReasonCodePersistence;
import com.kencana.lms.service.persistence.VendorPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the marc batch upload remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.kencana.lms.service.impl.MarcBatchUploadServiceImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see com.kencana.lms.service.impl.MarcBatchUploadServiceImpl
 * @see com.kencana.lms.service.MarcBatchUploadServiceUtil
 * @generated
 */
public abstract class MarcBatchUploadServiceBaseImpl extends BaseServiceImpl
	implements MarcBatchUploadService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.kencana.lms.service.MarcBatchUploadServiceUtil} to access the marc batch upload remote service.
	 */

	/**
	 * Returns the catalog local service.
	 *
	 * @return the catalog local service
	 */
	public com.kencana.lms.service.CatalogLocalService getCatalogLocalService() {
		return catalogLocalService;
	}

	/**
	 * Sets the catalog local service.
	 *
	 * @param catalogLocalService the catalog local service
	 */
	public void setCatalogLocalService(
		com.kencana.lms.service.CatalogLocalService catalogLocalService) {
		this.catalogLocalService = catalogLocalService;
	}

	/**
	 * Returns the catalog remote service.
	 *
	 * @return the catalog remote service
	 */
	public com.kencana.lms.service.CatalogService getCatalogService() {
		return catalogService;
	}

	/**
	 * Sets the catalog remote service.
	 *
	 * @param catalogService the catalog remote service
	 */
	public void setCatalogService(
		com.kencana.lms.service.CatalogService catalogService) {
		this.catalogService = catalogService;
	}

	/**
	 * Returns the catalog persistence.
	 *
	 * @return the catalog persistence
	 */
	public CatalogPersistence getCatalogPersistence() {
		return catalogPersistence;
	}

	/**
	 * Sets the catalog persistence.
	 *
	 * @param catalogPersistence the catalog persistence
	 */
	public void setCatalogPersistence(CatalogPersistence catalogPersistence) {
		this.catalogPersistence = catalogPersistence;
	}

	/**
	 * Returns the catalog item local service.
	 *
	 * @return the catalog item local service
	 */
	public com.kencana.lms.service.CatalogItemLocalService getCatalogItemLocalService() {
		return catalogItemLocalService;
	}

	/**
	 * Sets the catalog item local service.
	 *
	 * @param catalogItemLocalService the catalog item local service
	 */
	public void setCatalogItemLocalService(
		com.kencana.lms.service.CatalogItemLocalService catalogItemLocalService) {
		this.catalogItemLocalService = catalogItemLocalService;
	}

	/**
	 * Returns the catalog item remote service.
	 *
	 * @return the catalog item remote service
	 */
	public com.kencana.lms.service.CatalogItemService getCatalogItemService() {
		return catalogItemService;
	}

	/**
	 * Sets the catalog item remote service.
	 *
	 * @param catalogItemService the catalog item remote service
	 */
	public void setCatalogItemService(
		com.kencana.lms.service.CatalogItemService catalogItemService) {
		this.catalogItemService = catalogItemService;
	}

	/**
	 * Returns the catalog item persistence.
	 *
	 * @return the catalog item persistence
	 */
	public CatalogItemPersistence getCatalogItemPersistence() {
		return catalogItemPersistence;
	}

	/**
	 * Sets the catalog item persistence.
	 *
	 * @param catalogItemPersistence the catalog item persistence
	 */
	public void setCatalogItemPersistence(
		CatalogItemPersistence catalogItemPersistence) {
		this.catalogItemPersistence = catalogItemPersistence;
	}

	/**
	 * Returns the catalog template local service.
	 *
	 * @return the catalog template local service
	 */
	public com.kencana.lms.service.CatalogTemplateLocalService getCatalogTemplateLocalService() {
		return catalogTemplateLocalService;
	}

	/**
	 * Sets the catalog template local service.
	 *
	 * @param catalogTemplateLocalService the catalog template local service
	 */
	public void setCatalogTemplateLocalService(
		com.kencana.lms.service.CatalogTemplateLocalService catalogTemplateLocalService) {
		this.catalogTemplateLocalService = catalogTemplateLocalService;
	}

	/**
	 * Returns the catalog template remote service.
	 *
	 * @return the catalog template remote service
	 */
	public com.kencana.lms.service.CatalogTemplateService getCatalogTemplateService() {
		return catalogTemplateService;
	}

	/**
	 * Sets the catalog template remote service.
	 *
	 * @param catalogTemplateService the catalog template remote service
	 */
	public void setCatalogTemplateService(
		com.kencana.lms.service.CatalogTemplateService catalogTemplateService) {
		this.catalogTemplateService = catalogTemplateService;
	}

	/**
	 * Returns the catalog template persistence.
	 *
	 * @return the catalog template persistence
	 */
	public CatalogTemplatePersistence getCatalogTemplatePersistence() {
		return catalogTemplatePersistence;
	}

	/**
	 * Sets the catalog template persistence.
	 *
	 * @param catalogTemplatePersistence the catalog template persistence
	 */
	public void setCatalogTemplatePersistence(
		CatalogTemplatePersistence catalogTemplatePersistence) {
		this.catalogTemplatePersistence = catalogTemplatePersistence;
	}

	/**
	 * Returns the catalog template subfield local service.
	 *
	 * @return the catalog template subfield local service
	 */
	public com.kencana.lms.service.CatalogTemplateSubfieldLocalService getCatalogTemplateSubfieldLocalService() {
		return catalogTemplateSubfieldLocalService;
	}

	/**
	 * Sets the catalog template subfield local service.
	 *
	 * @param catalogTemplateSubfieldLocalService the catalog template subfield local service
	 */
	public void setCatalogTemplateSubfieldLocalService(
		com.kencana.lms.service.CatalogTemplateSubfieldLocalService catalogTemplateSubfieldLocalService) {
		this.catalogTemplateSubfieldLocalService = catalogTemplateSubfieldLocalService;
	}

	/**
	 * Returns the catalog template subfield remote service.
	 *
	 * @return the catalog template subfield remote service
	 */
	public com.kencana.lms.service.CatalogTemplateSubfieldService getCatalogTemplateSubfieldService() {
		return catalogTemplateSubfieldService;
	}

	/**
	 * Sets the catalog template subfield remote service.
	 *
	 * @param catalogTemplateSubfieldService the catalog template subfield remote service
	 */
	public void setCatalogTemplateSubfieldService(
		com.kencana.lms.service.CatalogTemplateSubfieldService catalogTemplateSubfieldService) {
		this.catalogTemplateSubfieldService = catalogTemplateSubfieldService;
	}

	/**
	 * Returns the catalog template subfield persistence.
	 *
	 * @return the catalog template subfield persistence
	 */
	public CatalogTemplateSubfieldPersistence getCatalogTemplateSubfieldPersistence() {
		return catalogTemplateSubfieldPersistence;
	}

	/**
	 * Sets the catalog template subfield persistence.
	 *
	 * @param catalogTemplateSubfieldPersistence the catalog template subfield persistence
	 */
	public void setCatalogTemplateSubfieldPersistence(
		CatalogTemplateSubfieldPersistence catalogTemplateSubfieldPersistence) {
		this.catalogTemplateSubfieldPersistence = catalogTemplateSubfieldPersistence;
	}

	/**
	 * Returns the catalog template tag local service.
	 *
	 * @return the catalog template tag local service
	 */
	public com.kencana.lms.service.CatalogTemplateTagLocalService getCatalogTemplateTagLocalService() {
		return catalogTemplateTagLocalService;
	}

	/**
	 * Sets the catalog template tag local service.
	 *
	 * @param catalogTemplateTagLocalService the catalog template tag local service
	 */
	public void setCatalogTemplateTagLocalService(
		com.kencana.lms.service.CatalogTemplateTagLocalService catalogTemplateTagLocalService) {
		this.catalogTemplateTagLocalService = catalogTemplateTagLocalService;
	}

	/**
	 * Returns the catalog template tag remote service.
	 *
	 * @return the catalog template tag remote service
	 */
	public com.kencana.lms.service.CatalogTemplateTagService getCatalogTemplateTagService() {
		return catalogTemplateTagService;
	}

	/**
	 * Sets the catalog template tag remote service.
	 *
	 * @param catalogTemplateTagService the catalog template tag remote service
	 */
	public void setCatalogTemplateTagService(
		com.kencana.lms.service.CatalogTemplateTagService catalogTemplateTagService) {
		this.catalogTemplateTagService = catalogTemplateTagService;
	}

	/**
	 * Returns the catalog template tag persistence.
	 *
	 * @return the catalog template tag persistence
	 */
	public CatalogTemplateTagPersistence getCatalogTemplateTagPersistence() {
		return catalogTemplateTagPersistence;
	}

	/**
	 * Sets the catalog template tag persistence.
	 *
	 * @param catalogTemplateTagPersistence the catalog template tag persistence
	 */
	public void setCatalogTemplateTagPersistence(
		CatalogTemplateTagPersistence catalogTemplateTagPersistence) {
		this.catalogTemplateTagPersistence = catalogTemplateTagPersistence;
	}

	/**
	 * Returns the circ trans history local service.
	 *
	 * @return the circ trans history local service
	 */
	public com.kencana.lms.service.CircTransHistoryLocalService getCircTransHistoryLocalService() {
		return circTransHistoryLocalService;
	}

	/**
	 * Sets the circ trans history local service.
	 *
	 * @param circTransHistoryLocalService the circ trans history local service
	 */
	public void setCircTransHistoryLocalService(
		com.kencana.lms.service.CircTransHistoryLocalService circTransHistoryLocalService) {
		this.circTransHistoryLocalService = circTransHistoryLocalService;
	}

	/**
	 * Returns the circ trans history remote service.
	 *
	 * @return the circ trans history remote service
	 */
	public com.kencana.lms.service.CircTransHistoryService getCircTransHistoryService() {
		return circTransHistoryService;
	}

	/**
	 * Sets the circ trans history remote service.
	 *
	 * @param circTransHistoryService the circ trans history remote service
	 */
	public void setCircTransHistoryService(
		com.kencana.lms.service.CircTransHistoryService circTransHistoryService) {
		this.circTransHistoryService = circTransHistoryService;
	}

	/**
	 * Returns the circ trans history persistence.
	 *
	 * @return the circ trans history persistence
	 */
	public CircTransHistoryPersistence getCircTransHistoryPersistence() {
		return circTransHistoryPersistence;
	}

	/**
	 * Sets the circ trans history persistence.
	 *
	 * @param circTransHistoryPersistence the circ trans history persistence
	 */
	public void setCircTransHistoryPersistence(
		CircTransHistoryPersistence circTransHistoryPersistence) {
		this.circTransHistoryPersistence = circTransHistoryPersistence;
	}

	/**
	 * Returns the circulation rule local service.
	 *
	 * @return the circulation rule local service
	 */
	public com.kencana.lms.service.CirculationRuleLocalService getCirculationRuleLocalService() {
		return circulationRuleLocalService;
	}

	/**
	 * Sets the circulation rule local service.
	 *
	 * @param circulationRuleLocalService the circulation rule local service
	 */
	public void setCirculationRuleLocalService(
		com.kencana.lms.service.CirculationRuleLocalService circulationRuleLocalService) {
		this.circulationRuleLocalService = circulationRuleLocalService;
	}

	/**
	 * Returns the circulation rule remote service.
	 *
	 * @return the circulation rule remote service
	 */
	public com.kencana.lms.service.CirculationRuleService getCirculationRuleService() {
		return circulationRuleService;
	}

	/**
	 * Sets the circulation rule remote service.
	 *
	 * @param circulationRuleService the circulation rule remote service
	 */
	public void setCirculationRuleService(
		com.kencana.lms.service.CirculationRuleService circulationRuleService) {
		this.circulationRuleService = circulationRuleService;
	}

	/**
	 * Returns the circulation rule persistence.
	 *
	 * @return the circulation rule persistence
	 */
	public CirculationRulePersistence getCirculationRulePersistence() {
		return circulationRulePersistence;
	}

	/**
	 * Sets the circulation rule persistence.
	 *
	 * @param circulationRulePersistence the circulation rule persistence
	 */
	public void setCirculationRulePersistence(
		CirculationRulePersistence circulationRulePersistence) {
		this.circulationRulePersistence = circulationRulePersistence;
	}

	/**
	 * Returns the circulation trans local service.
	 *
	 * @return the circulation trans local service
	 */
	public com.kencana.lms.service.CirculationTransLocalService getCirculationTransLocalService() {
		return circulationTransLocalService;
	}

	/**
	 * Sets the circulation trans local service.
	 *
	 * @param circulationTransLocalService the circulation trans local service
	 */
	public void setCirculationTransLocalService(
		com.kencana.lms.service.CirculationTransLocalService circulationTransLocalService) {
		this.circulationTransLocalService = circulationTransLocalService;
	}

	/**
	 * Returns the circulation trans remote service.
	 *
	 * @return the circulation trans remote service
	 */
	public com.kencana.lms.service.CirculationTransService getCirculationTransService() {
		return circulationTransService;
	}

	/**
	 * Sets the circulation trans remote service.
	 *
	 * @param circulationTransService the circulation trans remote service
	 */
	public void setCirculationTransService(
		com.kencana.lms.service.CirculationTransService circulationTransService) {
		this.circulationTransService = circulationTransService;
	}

	/**
	 * Returns the circulation trans persistence.
	 *
	 * @return the circulation trans persistence
	 */
	public CirculationTransPersistence getCirculationTransPersistence() {
		return circulationTransPersistence;
	}

	/**
	 * Sets the circulation trans persistence.
	 *
	 * @param circulationTransPersistence the circulation trans persistence
	 */
	public void setCirculationTransPersistence(
		CirculationTransPersistence circulationTransPersistence) {
		this.circulationTransPersistence = circulationTransPersistence;
	}

	/**
	 * Returns the item category local service.
	 *
	 * @return the item category local service
	 */
	public com.kencana.lms.service.ItemCategoryLocalService getItemCategoryLocalService() {
		return itemCategoryLocalService;
	}

	/**
	 * Sets the item category local service.
	 *
	 * @param itemCategoryLocalService the item category local service
	 */
	public void setItemCategoryLocalService(
		com.kencana.lms.service.ItemCategoryLocalService itemCategoryLocalService) {
		this.itemCategoryLocalService = itemCategoryLocalService;
	}

	/**
	 * Returns the item category remote service.
	 *
	 * @return the item category remote service
	 */
	public com.kencana.lms.service.ItemCategoryService getItemCategoryService() {
		return itemCategoryService;
	}

	/**
	 * Sets the item category remote service.
	 *
	 * @param itemCategoryService the item category remote service
	 */
	public void setItemCategoryService(
		com.kencana.lms.service.ItemCategoryService itemCategoryService) {
		this.itemCategoryService = itemCategoryService;
	}

	/**
	 * Returns the item category persistence.
	 *
	 * @return the item category persistence
	 */
	public ItemCategoryPersistence getItemCategoryPersistence() {
		return itemCategoryPersistence;
	}

	/**
	 * Sets the item category persistence.
	 *
	 * @param itemCategoryPersistence the item category persistence
	 */
	public void setItemCategoryPersistence(
		ItemCategoryPersistence itemCategoryPersistence) {
		this.itemCategoryPersistence = itemCategoryPersistence;
	}

	/**
	 * Returns the item type local service.
	 *
	 * @return the item type local service
	 */
	public com.kencana.lms.service.ItemTypeLocalService getItemTypeLocalService() {
		return itemTypeLocalService;
	}

	/**
	 * Sets the item type local service.
	 *
	 * @param itemTypeLocalService the item type local service
	 */
	public void setItemTypeLocalService(
		com.kencana.lms.service.ItemTypeLocalService itemTypeLocalService) {
		this.itemTypeLocalService = itemTypeLocalService;
	}

	/**
	 * Returns the item type remote service.
	 *
	 * @return the item type remote service
	 */
	public com.kencana.lms.service.ItemTypeService getItemTypeService() {
		return itemTypeService;
	}

	/**
	 * Sets the item type remote service.
	 *
	 * @param itemTypeService the item type remote service
	 */
	public void setItemTypeService(
		com.kencana.lms.service.ItemTypeService itemTypeService) {
		this.itemTypeService = itemTypeService;
	}

	/**
	 * Returns the item type persistence.
	 *
	 * @return the item type persistence
	 */
	public ItemTypePersistence getItemTypePersistence() {
		return itemTypePersistence;
	}

	/**
	 * Sets the item type persistence.
	 *
	 * @param itemTypePersistence the item type persistence
	 */
	public void setItemTypePersistence(ItemTypePersistence itemTypePersistence) {
		this.itemTypePersistence = itemTypePersistence;
	}

	/**
	 * Returns the library local service.
	 *
	 * @return the library local service
	 */
	public com.kencana.lms.service.LibraryLocalService getLibraryLocalService() {
		return libraryLocalService;
	}

	/**
	 * Sets the library local service.
	 *
	 * @param libraryLocalService the library local service
	 */
	public void setLibraryLocalService(
		com.kencana.lms.service.LibraryLocalService libraryLocalService) {
		this.libraryLocalService = libraryLocalService;
	}

	/**
	 * Returns the library remote service.
	 *
	 * @return the library remote service
	 */
	public com.kencana.lms.service.LibraryService getLibraryService() {
		return libraryService;
	}

	/**
	 * Sets the library remote service.
	 *
	 * @param libraryService the library remote service
	 */
	public void setLibraryService(
		com.kencana.lms.service.LibraryService libraryService) {
		this.libraryService = libraryService;
	}

	/**
	 * Returns the library persistence.
	 *
	 * @return the library persistence
	 */
	public LibraryPersistence getLibraryPersistence() {
		return libraryPersistence;
	}

	/**
	 * Sets the library persistence.
	 *
	 * @param libraryPersistence the library persistence
	 */
	public void setLibraryPersistence(LibraryPersistence libraryPersistence) {
		this.libraryPersistence = libraryPersistence;
	}

	/**
	 * Returns the location local service.
	 *
	 * @return the location local service
	 */
	public com.kencana.lms.service.LocationLocalService getLocationLocalService() {
		return locationLocalService;
	}

	/**
	 * Sets the location local service.
	 *
	 * @param locationLocalService the location local service
	 */
	public void setLocationLocalService(
		com.kencana.lms.service.LocationLocalService locationLocalService) {
		this.locationLocalService = locationLocalService;
	}

	/**
	 * Returns the location remote service.
	 *
	 * @return the location remote service
	 */
	public com.kencana.lms.service.LocationService getLocationService() {
		return locationService;
	}

	/**
	 * Sets the location remote service.
	 *
	 * @param locationService the location remote service
	 */
	public void setLocationService(
		com.kencana.lms.service.LocationService locationService) {
		this.locationService = locationService;
	}

	/**
	 * Returns the location persistence.
	 *
	 * @return the location persistence
	 */
	public LocationPersistence getLocationPersistence() {
		return locationPersistence;
	}

	/**
	 * Sets the location persistence.
	 *
	 * @param locationPersistence the location persistence
	 */
	public void setLocationPersistence(LocationPersistence locationPersistence) {
		this.locationPersistence = locationPersistence;
	}

	/**
	 * Returns the marc batch upload local service.
	 *
	 * @return the marc batch upload local service
	 */
	public com.kencana.lms.service.MarcBatchUploadLocalService getMarcBatchUploadLocalService() {
		return marcBatchUploadLocalService;
	}

	/**
	 * Sets the marc batch upload local service.
	 *
	 * @param marcBatchUploadLocalService the marc batch upload local service
	 */
	public void setMarcBatchUploadLocalService(
		com.kencana.lms.service.MarcBatchUploadLocalService marcBatchUploadLocalService) {
		this.marcBatchUploadLocalService = marcBatchUploadLocalService;
	}

	/**
	 * Returns the marc batch upload remote service.
	 *
	 * @return the marc batch upload remote service
	 */
	public com.kencana.lms.service.MarcBatchUploadService getMarcBatchUploadService() {
		return marcBatchUploadService;
	}

	/**
	 * Sets the marc batch upload remote service.
	 *
	 * @param marcBatchUploadService the marc batch upload remote service
	 */
	public void setMarcBatchUploadService(
		com.kencana.lms.service.MarcBatchUploadService marcBatchUploadService) {
		this.marcBatchUploadService = marcBatchUploadService;
	}

	/**
	 * Returns the marc batch upload persistence.
	 *
	 * @return the marc batch upload persistence
	 */
	public MarcBatchUploadPersistence getMarcBatchUploadPersistence() {
		return marcBatchUploadPersistence;
	}

	/**
	 * Sets the marc batch upload persistence.
	 *
	 * @param marcBatchUploadPersistence the marc batch upload persistence
	 */
	public void setMarcBatchUploadPersistence(
		MarcBatchUploadPersistence marcBatchUploadPersistence) {
		this.marcBatchUploadPersistence = marcBatchUploadPersistence;
	}

	/**
	 * Returns the marc batch upload item local service.
	 *
	 * @return the marc batch upload item local service
	 */
	public com.kencana.lms.service.MarcBatchUploadItemLocalService getMarcBatchUploadItemLocalService() {
		return marcBatchUploadItemLocalService;
	}

	/**
	 * Sets the marc batch upload item local service.
	 *
	 * @param marcBatchUploadItemLocalService the marc batch upload item local service
	 */
	public void setMarcBatchUploadItemLocalService(
		com.kencana.lms.service.MarcBatchUploadItemLocalService marcBatchUploadItemLocalService) {
		this.marcBatchUploadItemLocalService = marcBatchUploadItemLocalService;
	}

	/**
	 * Returns the marc batch upload item remote service.
	 *
	 * @return the marc batch upload item remote service
	 */
	public com.kencana.lms.service.MarcBatchUploadItemService getMarcBatchUploadItemService() {
		return marcBatchUploadItemService;
	}

	/**
	 * Sets the marc batch upload item remote service.
	 *
	 * @param marcBatchUploadItemService the marc batch upload item remote service
	 */
	public void setMarcBatchUploadItemService(
		com.kencana.lms.service.MarcBatchUploadItemService marcBatchUploadItemService) {
		this.marcBatchUploadItemService = marcBatchUploadItemService;
	}

	/**
	 * Returns the marc batch upload item persistence.
	 *
	 * @return the marc batch upload item persistence
	 */
	public MarcBatchUploadItemPersistence getMarcBatchUploadItemPersistence() {
		return marcBatchUploadItemPersistence;
	}

	/**
	 * Sets the marc batch upload item persistence.
	 *
	 * @param marcBatchUploadItemPersistence the marc batch upload item persistence
	 */
	public void setMarcBatchUploadItemPersistence(
		MarcBatchUploadItemPersistence marcBatchUploadItemPersistence) {
		this.marcBatchUploadItemPersistence = marcBatchUploadItemPersistence;
	}

	/**
	 * Returns the marc subfield local service.
	 *
	 * @return the marc subfield local service
	 */
	public com.kencana.lms.service.MarcSubfieldLocalService getMarcSubfieldLocalService() {
		return marcSubfieldLocalService;
	}

	/**
	 * Sets the marc subfield local service.
	 *
	 * @param marcSubfieldLocalService the marc subfield local service
	 */
	public void setMarcSubfieldLocalService(
		com.kencana.lms.service.MarcSubfieldLocalService marcSubfieldLocalService) {
		this.marcSubfieldLocalService = marcSubfieldLocalService;
	}

	/**
	 * Returns the marc subfield remote service.
	 *
	 * @return the marc subfield remote service
	 */
	public com.kencana.lms.service.MarcSubfieldService getMarcSubfieldService() {
		return marcSubfieldService;
	}

	/**
	 * Sets the marc subfield remote service.
	 *
	 * @param marcSubfieldService the marc subfield remote service
	 */
	public void setMarcSubfieldService(
		com.kencana.lms.service.MarcSubfieldService marcSubfieldService) {
		this.marcSubfieldService = marcSubfieldService;
	}

	/**
	 * Returns the marc subfield persistence.
	 *
	 * @return the marc subfield persistence
	 */
	public MarcSubfieldPersistence getMarcSubfieldPersistence() {
		return marcSubfieldPersistence;
	}

	/**
	 * Sets the marc subfield persistence.
	 *
	 * @param marcSubfieldPersistence the marc subfield persistence
	 */
	public void setMarcSubfieldPersistence(
		MarcSubfieldPersistence marcSubfieldPersistence) {
		this.marcSubfieldPersistence = marcSubfieldPersistence;
	}

	/**
	 * Returns the marc tag local service.
	 *
	 * @return the marc tag local service
	 */
	public com.kencana.lms.service.MarcTagLocalService getMarcTagLocalService() {
		return marcTagLocalService;
	}

	/**
	 * Sets the marc tag local service.
	 *
	 * @param marcTagLocalService the marc tag local service
	 */
	public void setMarcTagLocalService(
		com.kencana.lms.service.MarcTagLocalService marcTagLocalService) {
		this.marcTagLocalService = marcTagLocalService;
	}

	/**
	 * Returns the marc tag remote service.
	 *
	 * @return the marc tag remote service
	 */
	public com.kencana.lms.service.MarcTagService getMarcTagService() {
		return marcTagService;
	}

	/**
	 * Sets the marc tag remote service.
	 *
	 * @param marcTagService the marc tag remote service
	 */
	public void setMarcTagService(
		com.kencana.lms.service.MarcTagService marcTagService) {
		this.marcTagService = marcTagService;
	}

	/**
	 * Returns the marc tag persistence.
	 *
	 * @return the marc tag persistence
	 */
	public MarcTagPersistence getMarcTagPersistence() {
		return marcTagPersistence;
	}

	/**
	 * Sets the marc tag persistence.
	 *
	 * @param marcTagPersistence the marc tag persistence
	 */
	public void setMarcTagPersistence(MarcTagPersistence marcTagPersistence) {
		this.marcTagPersistence = marcTagPersistence;
	}

	/**
	 * Returns the patron local service.
	 *
	 * @return the patron local service
	 */
	public com.kencana.lms.service.PatronLocalService getPatronLocalService() {
		return patronLocalService;
	}

	/**
	 * Sets the patron local service.
	 *
	 * @param patronLocalService the patron local service
	 */
	public void setPatronLocalService(
		com.kencana.lms.service.PatronLocalService patronLocalService) {
		this.patronLocalService = patronLocalService;
	}

	/**
	 * Returns the patron remote service.
	 *
	 * @return the patron remote service
	 */
	public com.kencana.lms.service.PatronService getPatronService() {
		return patronService;
	}

	/**
	 * Sets the patron remote service.
	 *
	 * @param patronService the patron remote service
	 */
	public void setPatronService(
		com.kencana.lms.service.PatronService patronService) {
		this.patronService = patronService;
	}

	/**
	 * Returns the patron persistence.
	 *
	 * @return the patron persistence
	 */
	public PatronPersistence getPatronPersistence() {
		return patronPersistence;
	}

	/**
	 * Sets the patron persistence.
	 *
	 * @param patronPersistence the patron persistence
	 */
	public void setPatronPersistence(PatronPersistence patronPersistence) {
		this.patronPersistence = patronPersistence;
	}

	/**
	 * Returns the patron category local service.
	 *
	 * @return the patron category local service
	 */
	public com.kencana.lms.service.PatronCategoryLocalService getPatronCategoryLocalService() {
		return patronCategoryLocalService;
	}

	/**
	 * Sets the patron category local service.
	 *
	 * @param patronCategoryLocalService the patron category local service
	 */
	public void setPatronCategoryLocalService(
		com.kencana.lms.service.PatronCategoryLocalService patronCategoryLocalService) {
		this.patronCategoryLocalService = patronCategoryLocalService;
	}

	/**
	 * Returns the patron category remote service.
	 *
	 * @return the patron category remote service
	 */
	public com.kencana.lms.service.PatronCategoryService getPatronCategoryService() {
		return patronCategoryService;
	}

	/**
	 * Sets the patron category remote service.
	 *
	 * @param patronCategoryService the patron category remote service
	 */
	public void setPatronCategoryService(
		com.kencana.lms.service.PatronCategoryService patronCategoryService) {
		this.patronCategoryService = patronCategoryService;
	}

	/**
	 * Returns the patron category persistence.
	 *
	 * @return the patron category persistence
	 */
	public PatronCategoryPersistence getPatronCategoryPersistence() {
		return patronCategoryPersistence;
	}

	/**
	 * Sets the patron category persistence.
	 *
	 * @param patronCategoryPersistence the patron category persistence
	 */
	public void setPatronCategoryPersistence(
		PatronCategoryPersistence patronCategoryPersistence) {
		this.patronCategoryPersistence = patronCategoryPersistence;
	}

	/**
	 * Returns the patron status local service.
	 *
	 * @return the patron status local service
	 */
	public com.kencana.lms.service.PatronStatusLocalService getPatronStatusLocalService() {
		return patronStatusLocalService;
	}

	/**
	 * Sets the patron status local service.
	 *
	 * @param patronStatusLocalService the patron status local service
	 */
	public void setPatronStatusLocalService(
		com.kencana.lms.service.PatronStatusLocalService patronStatusLocalService) {
		this.patronStatusLocalService = patronStatusLocalService;
	}

	/**
	 * Returns the patron status remote service.
	 *
	 * @return the patron status remote service
	 */
	public com.kencana.lms.service.PatronStatusService getPatronStatusService() {
		return patronStatusService;
	}

	/**
	 * Sets the patron status remote service.
	 *
	 * @param patronStatusService the patron status remote service
	 */
	public void setPatronStatusService(
		com.kencana.lms.service.PatronStatusService patronStatusService) {
		this.patronStatusService = patronStatusService;
	}

	/**
	 * Returns the patron status persistence.
	 *
	 * @return the patron status persistence
	 */
	public PatronStatusPersistence getPatronStatusPersistence() {
		return patronStatusPersistence;
	}

	/**
	 * Sets the patron status persistence.
	 *
	 * @param patronStatusPersistence the patron status persistence
	 */
	public void setPatronStatusPersistence(
		PatronStatusPersistence patronStatusPersistence) {
		this.patronStatusPersistence = patronStatusPersistence;
	}

	/**
	 * Returns the reason code local service.
	 *
	 * @return the reason code local service
	 */
	public com.kencana.lms.service.ReasonCodeLocalService getReasonCodeLocalService() {
		return reasonCodeLocalService;
	}

	/**
	 * Sets the reason code local service.
	 *
	 * @param reasonCodeLocalService the reason code local service
	 */
	public void setReasonCodeLocalService(
		com.kencana.lms.service.ReasonCodeLocalService reasonCodeLocalService) {
		this.reasonCodeLocalService = reasonCodeLocalService;
	}

	/**
	 * Returns the reason code remote service.
	 *
	 * @return the reason code remote service
	 */
	public com.kencana.lms.service.ReasonCodeService getReasonCodeService() {
		return reasonCodeService;
	}

	/**
	 * Sets the reason code remote service.
	 *
	 * @param reasonCodeService the reason code remote service
	 */
	public void setReasonCodeService(
		com.kencana.lms.service.ReasonCodeService reasonCodeService) {
		this.reasonCodeService = reasonCodeService;
	}

	/**
	 * Returns the reason code persistence.
	 *
	 * @return the reason code persistence
	 */
	public ReasonCodePersistence getReasonCodePersistence() {
		return reasonCodePersistence;
	}

	/**
	 * Sets the reason code persistence.
	 *
	 * @param reasonCodePersistence the reason code persistence
	 */
	public void setReasonCodePersistence(
		ReasonCodePersistence reasonCodePersistence) {
		this.reasonCodePersistence = reasonCodePersistence;
	}

	/**
	 * Returns the vendor local service.
	 *
	 * @return the vendor local service
	 */
	public com.kencana.lms.service.VendorLocalService getVendorLocalService() {
		return vendorLocalService;
	}

	/**
	 * Sets the vendor local service.
	 *
	 * @param vendorLocalService the vendor local service
	 */
	public void setVendorLocalService(
		com.kencana.lms.service.VendorLocalService vendorLocalService) {
		this.vendorLocalService = vendorLocalService;
	}

	/**
	 * Returns the vendor remote service.
	 *
	 * @return the vendor remote service
	 */
	public com.kencana.lms.service.VendorService getVendorService() {
		return vendorService;
	}

	/**
	 * Sets the vendor remote service.
	 *
	 * @param vendorService the vendor remote service
	 */
	public void setVendorService(
		com.kencana.lms.service.VendorService vendorService) {
		this.vendorService = vendorService;
	}

	/**
	 * Returns the vendor persistence.
	 *
	 * @return the vendor persistence
	 */
	public VendorPersistence getVendorPersistence() {
		return vendorPersistence;
	}

	/**
	 * Sets the vendor persistence.
	 *
	 * @param vendorPersistence the vendor persistence
	 */
	public void setVendorPersistence(VendorPersistence vendorPersistence) {
		this.vendorPersistence = vendorPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return MarcBatchUpload.class;
	}

	protected String getModelClassName() {
		return MarcBatchUpload.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = marcBatchUploadPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.kencana.lms.service.CatalogLocalService.class)
	protected com.kencana.lms.service.CatalogLocalService catalogLocalService;
	@BeanReference(type = com.kencana.lms.service.CatalogService.class)
	protected com.kencana.lms.service.CatalogService catalogService;
	@BeanReference(type = CatalogPersistence.class)
	protected CatalogPersistence catalogPersistence;
	@BeanReference(type = com.kencana.lms.service.CatalogItemLocalService.class)
	protected com.kencana.lms.service.CatalogItemLocalService catalogItemLocalService;
	@BeanReference(type = com.kencana.lms.service.CatalogItemService.class)
	protected com.kencana.lms.service.CatalogItemService catalogItemService;
	@BeanReference(type = CatalogItemPersistence.class)
	protected CatalogItemPersistence catalogItemPersistence;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateLocalService.class)
	protected com.kencana.lms.service.CatalogTemplateLocalService catalogTemplateLocalService;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateService.class)
	protected com.kencana.lms.service.CatalogTemplateService catalogTemplateService;
	@BeanReference(type = CatalogTemplatePersistence.class)
	protected CatalogTemplatePersistence catalogTemplatePersistence;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateSubfieldLocalService.class)
	protected com.kencana.lms.service.CatalogTemplateSubfieldLocalService catalogTemplateSubfieldLocalService;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateSubfieldService.class)
	protected com.kencana.lms.service.CatalogTemplateSubfieldService catalogTemplateSubfieldService;
	@BeanReference(type = CatalogTemplateSubfieldPersistence.class)
	protected CatalogTemplateSubfieldPersistence catalogTemplateSubfieldPersistence;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateTagLocalService.class)
	protected com.kencana.lms.service.CatalogTemplateTagLocalService catalogTemplateTagLocalService;
	@BeanReference(type = com.kencana.lms.service.CatalogTemplateTagService.class)
	protected com.kencana.lms.service.CatalogTemplateTagService catalogTemplateTagService;
	@BeanReference(type = CatalogTemplateTagPersistence.class)
	protected CatalogTemplateTagPersistence catalogTemplateTagPersistence;
	@BeanReference(type = com.kencana.lms.service.CircTransHistoryLocalService.class)
	protected com.kencana.lms.service.CircTransHistoryLocalService circTransHistoryLocalService;
	@BeanReference(type = com.kencana.lms.service.CircTransHistoryService.class)
	protected com.kencana.lms.service.CircTransHistoryService circTransHistoryService;
	@BeanReference(type = CircTransHistoryPersistence.class)
	protected CircTransHistoryPersistence circTransHistoryPersistence;
	@BeanReference(type = com.kencana.lms.service.CirculationRuleLocalService.class)
	protected com.kencana.lms.service.CirculationRuleLocalService circulationRuleLocalService;
	@BeanReference(type = com.kencana.lms.service.CirculationRuleService.class)
	protected com.kencana.lms.service.CirculationRuleService circulationRuleService;
	@BeanReference(type = CirculationRulePersistence.class)
	protected CirculationRulePersistence circulationRulePersistence;
	@BeanReference(type = com.kencana.lms.service.CirculationTransLocalService.class)
	protected com.kencana.lms.service.CirculationTransLocalService circulationTransLocalService;
	@BeanReference(type = com.kencana.lms.service.CirculationTransService.class)
	protected com.kencana.lms.service.CirculationTransService circulationTransService;
	@BeanReference(type = CirculationTransPersistence.class)
	protected CirculationTransPersistence circulationTransPersistence;
	@BeanReference(type = com.kencana.lms.service.ItemCategoryLocalService.class)
	protected com.kencana.lms.service.ItemCategoryLocalService itemCategoryLocalService;
	@BeanReference(type = com.kencana.lms.service.ItemCategoryService.class)
	protected com.kencana.lms.service.ItemCategoryService itemCategoryService;
	@BeanReference(type = ItemCategoryPersistence.class)
	protected ItemCategoryPersistence itemCategoryPersistence;
	@BeanReference(type = com.kencana.lms.service.ItemTypeLocalService.class)
	protected com.kencana.lms.service.ItemTypeLocalService itemTypeLocalService;
	@BeanReference(type = com.kencana.lms.service.ItemTypeService.class)
	protected com.kencana.lms.service.ItemTypeService itemTypeService;
	@BeanReference(type = ItemTypePersistence.class)
	protected ItemTypePersistence itemTypePersistence;
	@BeanReference(type = com.kencana.lms.service.LibraryLocalService.class)
	protected com.kencana.lms.service.LibraryLocalService libraryLocalService;
	@BeanReference(type = com.kencana.lms.service.LibraryService.class)
	protected com.kencana.lms.service.LibraryService libraryService;
	@BeanReference(type = LibraryPersistence.class)
	protected LibraryPersistence libraryPersistence;
	@BeanReference(type = com.kencana.lms.service.LocationLocalService.class)
	protected com.kencana.lms.service.LocationLocalService locationLocalService;
	@BeanReference(type = com.kencana.lms.service.LocationService.class)
	protected com.kencana.lms.service.LocationService locationService;
	@BeanReference(type = LocationPersistence.class)
	protected LocationPersistence locationPersistence;
	@BeanReference(type = com.kencana.lms.service.MarcBatchUploadLocalService.class)
	protected com.kencana.lms.service.MarcBatchUploadLocalService marcBatchUploadLocalService;
	@BeanReference(type = com.kencana.lms.service.MarcBatchUploadService.class)
	protected com.kencana.lms.service.MarcBatchUploadService marcBatchUploadService;
	@BeanReference(type = MarcBatchUploadPersistence.class)
	protected MarcBatchUploadPersistence marcBatchUploadPersistence;
	@BeanReference(type = com.kencana.lms.service.MarcBatchUploadItemLocalService.class)
	protected com.kencana.lms.service.MarcBatchUploadItemLocalService marcBatchUploadItemLocalService;
	@BeanReference(type = com.kencana.lms.service.MarcBatchUploadItemService.class)
	protected com.kencana.lms.service.MarcBatchUploadItemService marcBatchUploadItemService;
	@BeanReference(type = MarcBatchUploadItemPersistence.class)
	protected MarcBatchUploadItemPersistence marcBatchUploadItemPersistence;
	@BeanReference(type = com.kencana.lms.service.MarcSubfieldLocalService.class)
	protected com.kencana.lms.service.MarcSubfieldLocalService marcSubfieldLocalService;
	@BeanReference(type = com.kencana.lms.service.MarcSubfieldService.class)
	protected com.kencana.lms.service.MarcSubfieldService marcSubfieldService;
	@BeanReference(type = MarcSubfieldPersistence.class)
	protected MarcSubfieldPersistence marcSubfieldPersistence;
	@BeanReference(type = com.kencana.lms.service.MarcTagLocalService.class)
	protected com.kencana.lms.service.MarcTagLocalService marcTagLocalService;
	@BeanReference(type = com.kencana.lms.service.MarcTagService.class)
	protected com.kencana.lms.service.MarcTagService marcTagService;
	@BeanReference(type = MarcTagPersistence.class)
	protected MarcTagPersistence marcTagPersistence;
	@BeanReference(type = com.kencana.lms.service.PatronLocalService.class)
	protected com.kencana.lms.service.PatronLocalService patronLocalService;
	@BeanReference(type = com.kencana.lms.service.PatronService.class)
	protected com.kencana.lms.service.PatronService patronService;
	@BeanReference(type = PatronPersistence.class)
	protected PatronPersistence patronPersistence;
	@BeanReference(type = com.kencana.lms.service.PatronCategoryLocalService.class)
	protected com.kencana.lms.service.PatronCategoryLocalService patronCategoryLocalService;
	@BeanReference(type = com.kencana.lms.service.PatronCategoryService.class)
	protected com.kencana.lms.service.PatronCategoryService patronCategoryService;
	@BeanReference(type = PatronCategoryPersistence.class)
	protected PatronCategoryPersistence patronCategoryPersistence;
	@BeanReference(type = com.kencana.lms.service.PatronStatusLocalService.class)
	protected com.kencana.lms.service.PatronStatusLocalService patronStatusLocalService;
	@BeanReference(type = com.kencana.lms.service.PatronStatusService.class)
	protected com.kencana.lms.service.PatronStatusService patronStatusService;
	@BeanReference(type = PatronStatusPersistence.class)
	protected PatronStatusPersistence patronStatusPersistence;
	@BeanReference(type = com.kencana.lms.service.ReasonCodeLocalService.class)
	protected com.kencana.lms.service.ReasonCodeLocalService reasonCodeLocalService;
	@BeanReference(type = com.kencana.lms.service.ReasonCodeService.class)
	protected com.kencana.lms.service.ReasonCodeService reasonCodeService;
	@BeanReference(type = ReasonCodePersistence.class)
	protected ReasonCodePersistence reasonCodePersistence;
	@BeanReference(type = com.kencana.lms.service.VendorLocalService.class)
	protected com.kencana.lms.service.VendorLocalService vendorLocalService;
	@BeanReference(type = com.kencana.lms.service.VendorService.class)
	protected com.kencana.lms.service.VendorService vendorService;
	@BeanReference(type = VendorPersistence.class)
	protected VendorPersistence vendorPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private MarcBatchUploadServiceClpInvoker _clpInvoker = new MarcBatchUploadServiceClpInvoker();
}