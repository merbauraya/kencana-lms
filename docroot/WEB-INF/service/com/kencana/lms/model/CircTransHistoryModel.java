/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CircTransHistory service. Represents a row in the &quot;Kencana_CircTransHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.CircTransHistoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.CircTransHistoryImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see CircTransHistory
 * @see com.kencana.lms.model.impl.CircTransHistoryImpl
 * @see com.kencana.lms.model.impl.CircTransHistoryModelImpl
 * @generated
 */
public interface CircTransHistoryModel extends BaseModel<CircTransHistory> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a circ trans history model instance should use the {@link CircTransHistory} interface instead.
	 */

	/**
	 * Returns the primary key of this circ trans history.
	 *
	 * @return the primary key of this circ trans history
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this circ trans history.
	 *
	 * @param primaryKey the primary key of this circ trans history
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the trans ID of this circ trans history.
	 *
	 * @return the trans ID of this circ trans history
	 */
	public long getTransId();

	/**
	 * Sets the trans ID of this circ trans history.
	 *
	 * @param transId the trans ID of this circ trans history
	 */
	public void setTransId(long transId);

	/**
	 * Returns the company ID of this circ trans history.
	 *
	 * @return the company ID of this circ trans history
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this circ trans history.
	 *
	 * @param companyId the company ID of this circ trans history
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this circ trans history.
	 *
	 * @return the group ID of this circ trans history
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this circ trans history.
	 *
	 * @param groupId the group ID of this circ trans history
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the library ID of this circ trans history.
	 *
	 * @return the library ID of this circ trans history
	 */
	public long getLibraryId();

	/**
	 * Sets the library ID of this circ trans history.
	 *
	 * @param libraryId the library ID of this circ trans history
	 */
	public void setLibraryId(long libraryId);

	/**
	 * Returns the patron ID of this circ trans history.
	 *
	 * @return the patron ID of this circ trans history
	 */
	public long getPatronId();

	/**
	 * Sets the patron ID of this circ trans history.
	 *
	 * @param patronId the patron ID of this circ trans history
	 */
	public void setPatronId(long patronId);

	/**
	 * Returns the catalog item ID of this circ trans history.
	 *
	 * @return the catalog item ID of this circ trans history
	 */
	public long getCatalogItemId();

	/**
	 * Sets the catalog item ID of this circ trans history.
	 *
	 * @param catalogItemId the catalog item ID of this circ trans history
	 */
	public void setCatalogItemId(long catalogItemId);

	/**
	 * Returns the trans date of this circ trans history.
	 *
	 * @return the trans date of this circ trans history
	 */
	public Date getTransDate();

	/**
	 * Sets the trans date of this circ trans history.
	 *
	 * @param transDate the trans date of this circ trans history
	 */
	public void setTransDate(Date transDate);

	/**
	 * Returns the due date of this circ trans history.
	 *
	 * @return the due date of this circ trans history
	 */
	public Date getDueDate();

	/**
	 * Sets the due date of this circ trans history.
	 *
	 * @param dueDate the due date of this circ trans history
	 */
	public void setDueDate(Date dueDate);

	/**
	 * Returns the overdue of this circ trans history.
	 *
	 * @return the overdue of this circ trans history
	 */
	public boolean getOverdue();

	/**
	 * Returns <code>true</code> if this circ trans history is overdue.
	 *
	 * @return <code>true</code> if this circ trans history is overdue; <code>false</code> otherwise
	 */
	public boolean isOverdue();

	/**
	 * Sets whether this circ trans history is overdue.
	 *
	 * @param overdue the overdue of this circ trans history
	 */
	public void setOverdue(boolean overdue);

	/**
	 * Returns the return date of this circ trans history.
	 *
	 * @return the return date of this circ trans history
	 */
	public Date getReturnDate();

	/**
	 * Sets the return date of this circ trans history.
	 *
	 * @param returnDate the return date of this circ trans history
	 */
	public void setReturnDate(Date returnDate);

	/**
	 * Returns the last renew date of this circ trans history.
	 *
	 * @return the last renew date of this circ trans history
	 */
	public Date getLastRenewDate();

	/**
	 * Sets the last renew date of this circ trans history.
	 *
	 * @param lastRenewDate the last renew date of this circ trans history
	 */
	public void setLastRenewDate(Date lastRenewDate);

	/**
	 * Returns the renew count of this circ trans history.
	 *
	 * @return the renew count of this circ trans history
	 */
	public int getRenewCount();

	/**
	 * Sets the renew count of this circ trans history.
	 *
	 * @param renewCount the renew count of this circ trans history
	 */
	public void setRenewCount(int renewCount);

	/**
	 * Returns the fine amount of this circ trans history.
	 *
	 * @return the fine amount of this circ trans history
	 */
	public Double getFineAmount();

	/**
	 * Sets the fine amount of this circ trans history.
	 *
	 * @param fineAmount the fine amount of this circ trans history
	 */
	public void setFineAmount(Double fineAmount);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.kencana.lms.model.CircTransHistory circTransHistory);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.CircTransHistory> toCacheModel();

	@Override
	public com.kencana.lms.model.CircTransHistory toEscapedModel();

	@Override
	public com.kencana.lms.model.CircTransHistory toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}