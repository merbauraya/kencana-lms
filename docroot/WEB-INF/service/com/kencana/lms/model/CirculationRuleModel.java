/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CirculationRule service. Represents a row in the &quot;Kencana_CirculationRule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.CirculationRuleModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.CirculationRuleImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see CirculationRule
 * @see com.kencana.lms.model.impl.CirculationRuleImpl
 * @see com.kencana.lms.model.impl.CirculationRuleModelImpl
 * @generated
 */
public interface CirculationRuleModel extends BaseModel<CirculationRule> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a circulation rule model instance should use the {@link CirculationRule} interface instead.
	 */

	/**
	 * Returns the primary key of this circulation rule.
	 *
	 * @return the primary key of this circulation rule
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this circulation rule.
	 *
	 * @param primaryKey the primary key of this circulation rule
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the circulation rule ID of this circulation rule.
	 *
	 * @return the circulation rule ID of this circulation rule
	 */
	public long getCirculationRuleId();

	/**
	 * Sets the circulation rule ID of this circulation rule.
	 *
	 * @param circulationRuleId the circulation rule ID of this circulation rule
	 */
	public void setCirculationRuleId(long circulationRuleId);

	/**
	 * Returns the library ID of this circulation rule.
	 *
	 * @return the library ID of this circulation rule
	 */
	public long getLibraryId();

	/**
	 * Sets the library ID of this circulation rule.
	 *
	 * @param libraryId the library ID of this circulation rule
	 */
	public void setLibraryId(long libraryId);

	/**
	 * Returns the company ID of this circulation rule.
	 *
	 * @return the company ID of this circulation rule
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this circulation rule.
	 *
	 * @param companyId the company ID of this circulation rule
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this circulation rule.
	 *
	 * @return the group ID of this circulation rule
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this circulation rule.
	 *
	 * @param groupId the group ID of this circulation rule
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the patron category ID of this circulation rule.
	 *
	 * @return the patron category ID of this circulation rule
	 */
	public long getPatronCategoryId();

	/**
	 * Sets the patron category ID of this circulation rule.
	 *
	 * @param patronCategoryId the patron category ID of this circulation rule
	 */
	public void setPatronCategoryId(long patronCategoryId);

	/**
	 * Returns the item type ID of this circulation rule.
	 *
	 * @return the item type ID of this circulation rule
	 */
	public long getItemTypeId();

	/**
	 * Sets the item type ID of this circulation rule.
	 *
	 * @param itemTypeId the item type ID of this circulation rule
	 */
	public void setItemTypeId(long itemTypeId);

	/**
	 * Returns the item category ID of this circulation rule.
	 *
	 * @return the item category ID of this circulation rule
	 */
	public long getItemCategoryId();

	/**
	 * Sets the item category ID of this circulation rule.
	 *
	 * @param itemCategoryId the item category ID of this circulation rule
	 */
	public void setItemCategoryId(long itemCategoryId);

	/**
	 * Returns the max checkout allowed of this circulation rule.
	 *
	 * @return the max checkout allowed of this circulation rule
	 */
	public int getMaxCheckoutAllowed();

	/**
	 * Sets the max checkout allowed of this circulation rule.
	 *
	 * @param maxCheckoutAllowed the max checkout allowed of this circulation rule
	 */
	public void setMaxCheckoutAllowed(int maxCheckoutAllowed);

	/**
	 * Returns the renewal count allowed of this circulation rule.
	 *
	 * @return the renewal count allowed of this circulation rule
	 */
	public int getRenewalCountAllowed();

	/**
	 * Sets the renewal count allowed of this circulation rule.
	 *
	 * @param renewalCountAllowed the renewal count allowed of this circulation rule
	 */
	public void setRenewalCountAllowed(int renewalCountAllowed);

	/**
	 * Returns the reserved count allowed of this circulation rule.
	 *
	 * @return the reserved count allowed of this circulation rule
	 */
	public int getReservedCountAllowed();

	/**
	 * Sets the reserved count allowed of this circulation rule.
	 *
	 * @param reservedCountAllowed the reserved count allowed of this circulation rule
	 */
	public void setReservedCountAllowed(int reservedCountAllowed);

	/**
	 * Returns the period unit of this circulation rule.
	 *
	 * @return the period unit of this circulation rule
	 */
	public int getPeriodUnit();

	/**
	 * Sets the period unit of this circulation rule.
	 *
	 * @param periodUnit the period unit of this circulation rule
	 */
	public void setPeriodUnit(int periodUnit);

	/**
	 * Returns the loan period of this circulation rule.
	 *
	 * @return the loan period of this circulation rule
	 */
	public int getLoanPeriod();

	/**
	 * Sets the loan period of this circulation rule.
	 *
	 * @param loanPeriod the loan period of this circulation rule
	 */
	public void setLoanPeriod(int loanPeriod);

	/**
	 * Returns the loan period if reserved of this circulation rule.
	 *
	 * @return the loan period if reserved of this circulation rule
	 */
	public int getLoanPeriodIfReserved();

	/**
	 * Sets the loan period if reserved of this circulation rule.
	 *
	 * @param loanPeriodIfReserved the loan period if reserved of this circulation rule
	 */
	public void setLoanPeriodIfReserved(int loanPeriodIfReserved);

	/**
	 * Returns the rental charge of this circulation rule.
	 *
	 * @return the rental charge of this circulation rule
	 */
	public double getRentalCharge();

	/**
	 * Sets the rental charge of this circulation rule.
	 *
	 * @param rentalCharge the rental charge of this circulation rule
	 */
	public void setRentalCharge(double rentalCharge);

	/**
	 * Returns the fine per period of this circulation rule.
	 *
	 * @return the fine per period of this circulation rule
	 */
	public double getFinePerPeriod();

	/**
	 * Sets the fine per period of this circulation rule.
	 *
	 * @param finePerPeriod the fine per period of this circulation rule
	 */
	public void setFinePerPeriod(double finePerPeriod);

	/**
	 * Returns the fine grace period of this circulation rule.
	 *
	 * @return the fine grace period of this circulation rule
	 */
	public int getFineGracePeriod();

	/**
	 * Sets the fine grace period of this circulation rule.
	 *
	 * @param fineGracePeriod the fine grace period of this circulation rule
	 */
	public void setFineGracePeriod(int fineGracePeriod);

	/**
	 * Returns the max fine amount of this circulation rule.
	 *
	 * @return the max fine amount of this circulation rule
	 */
	public double getMaxFineAmount();

	/**
	 * Sets the max fine amount of this circulation rule.
	 *
	 * @param maxFineAmount the max fine amount of this circulation rule
	 */
	public void setMaxFineAmount(double maxFineAmount);

	/**
	 * Returns the user ID of this circulation rule.
	 *
	 * @return the user ID of this circulation rule
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this circulation rule.
	 *
	 * @param userId the user ID of this circulation rule
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this circulation rule.
	 *
	 * @return the user uuid of this circulation rule
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this circulation rule.
	 *
	 * @param userUuid the user uuid of this circulation rule
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the created date of this circulation rule.
	 *
	 * @return the created date of this circulation rule
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this circulation rule.
	 *
	 * @param createdDate the created date of this circulation rule
	 */
	public void setCreatedDate(Date createdDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.kencana.lms.model.CirculationRule circulationRule);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.CirculationRule> toCacheModel();

	@Override
	public com.kencana.lms.model.CirculationRule toEscapedModel();

	@Override
	public com.kencana.lms.model.CirculationRule toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}