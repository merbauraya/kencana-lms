/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the PatronStatus service. Represents a row in the &quot;Kencana_PatronStatus&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.PatronStatusModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.PatronStatusImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see PatronStatus
 * @see com.kencana.lms.model.impl.PatronStatusImpl
 * @see com.kencana.lms.model.impl.PatronStatusModelImpl
 * @generated
 */
public interface PatronStatusModel extends BaseModel<PatronStatus> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a patron status model instance should use the {@link PatronStatus} interface instead.
	 */

	/**
	 * Returns the primary key of this patron status.
	 *
	 * @return the primary key of this patron status
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this patron status.
	 *
	 * @param primaryKey the primary key of this patron status
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the patron status ID of this patron status.
	 *
	 * @return the patron status ID of this patron status
	 */
	public long getPatronStatusId();

	/**
	 * Sets the patron status ID of this patron status.
	 *
	 * @param patronStatusId the patron status ID of this patron status
	 */
	public void setPatronStatusId(long patronStatusId);

	/**
	 * Returns the patron status name of this patron status.
	 *
	 * @return the patron status name of this patron status
	 */
	@AutoEscape
	public String getPatronStatusName();

	/**
	 * Sets the patron status name of this patron status.
	 *
	 * @param patronStatusName the patron status name of this patron status
	 */
	public void setPatronStatusName(String patronStatusName);

	/**
	 * Returns the no login of this patron status.
	 *
	 * @return the no login of this patron status
	 */
	public boolean getNoLogin();

	/**
	 * Returns <code>true</code> if this patron status is no login.
	 *
	 * @return <code>true</code> if this patron status is no login; <code>false</code> otherwise
	 */
	public boolean isNoLogin();

	/**
	 * Sets whether this patron status is no login.
	 *
	 * @param noLogin the no login of this patron status
	 */
	public void setNoLogin(boolean noLogin);

	/**
	 * Returns the no checkout of this patron status.
	 *
	 * @return the no checkout of this patron status
	 */
	public boolean getNoCheckout();

	/**
	 * Returns <code>true</code> if this patron status is no checkout.
	 *
	 * @return <code>true</code> if this patron status is no checkout; <code>false</code> otherwise
	 */
	public boolean isNoCheckout();

	/**
	 * Sets whether this patron status is no checkout.
	 *
	 * @param noCheckout the no checkout of this patron status
	 */
	public void setNoCheckout(boolean noCheckout);

	/**
	 * Returns the no reserve of this patron status.
	 *
	 * @return the no reserve of this patron status
	 */
	public boolean getNoReserve();

	/**
	 * Returns <code>true</code> if this patron status is no reserve.
	 *
	 * @return <code>true</code> if this patron status is no reserve; <code>false</code> otherwise
	 */
	public boolean isNoReserve();

	/**
	 * Sets whether this patron status is no reserve.
	 *
	 * @param noReserve the no reserve of this patron status
	 */
	public void setNoReserve(boolean noReserve);

	/**
	 * Returns the no renew of this patron status.
	 *
	 * @return the no renew of this patron status
	 */
	public boolean getNoRenew();

	/**
	 * Returns <code>true</code> if this patron status is no renew.
	 *
	 * @return <code>true</code> if this patron status is no renew; <code>false</code> otherwise
	 */
	public boolean isNoRenew();

	/**
	 * Sets whether this patron status is no renew.
	 *
	 * @param noRenew the no renew of this patron status
	 */
	public void setNoRenew(boolean noRenew);

	/**
	 * Returns the color of this patron status.
	 *
	 * @return the color of this patron status
	 */
	public int getColor();

	/**
	 * Sets the color of this patron status.
	 *
	 * @param color the color of this patron status
	 */
	public void setColor(int color);

	/**
	 * Returns the group ID of this patron status.
	 *
	 * @return the group ID of this patron status
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this patron status.
	 *
	 * @param groupId the group ID of this patron status
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this patron status.
	 *
	 * @return the company ID of this patron status
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this patron status.
	 *
	 * @param companyId the company ID of this patron status
	 */
	public void setCompanyId(long companyId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.kencana.lms.model.PatronStatus patronStatus);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.PatronStatus> toCacheModel();

	@Override
	public com.kencana.lms.model.PatronStatus toEscapedModel();

	@Override
	public com.kencana.lms.model.PatronStatus toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}