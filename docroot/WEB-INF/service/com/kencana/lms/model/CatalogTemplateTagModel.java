/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the CatalogTemplateTag service. Represents a row in the &quot;Kencana_CatalogTemplateTag&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.CatalogTemplateTagModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.CatalogTemplateTagImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see CatalogTemplateTag
 * @see com.kencana.lms.model.impl.CatalogTemplateTagImpl
 * @see com.kencana.lms.model.impl.CatalogTemplateTagModelImpl
 * @generated
 */
public interface CatalogTemplateTagModel extends BaseModel<CatalogTemplateTag> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a catalog template tag model instance should use the {@link CatalogTemplateTag} interface instead.
	 */

	/**
	 * Returns the primary key of this catalog template tag.
	 *
	 * @return the primary key of this catalog template tag
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this catalog template tag.
	 *
	 * @param primaryKey the primary key of this catalog template tag
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the catelog template tag ID of this catalog template tag.
	 *
	 * @return the catelog template tag ID of this catalog template tag
	 */
	public long getCatelogTemplateTagId();

	/**
	 * Sets the catelog template tag ID of this catalog template tag.
	 *
	 * @param catelogTemplateTagId the catelog template tag ID of this catalog template tag
	 */
	public void setCatelogTemplateTagId(long catelogTemplateTagId);

	/**
	 * Returns the catelog template ID of this catalog template tag.
	 *
	 * @return the catelog template ID of this catalog template tag
	 */
	public long getCatelogTemplateId();

	/**
	 * Sets the catelog template ID of this catalog template tag.
	 *
	 * @param catelogTemplateId the catelog template ID of this catalog template tag
	 */
	public void setCatelogTemplateId(long catelogTemplateId);

	/**
	 * Returns the group ID of this catalog template tag.
	 *
	 * @return the group ID of this catalog template tag
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this catalog template tag.
	 *
	 * @param groupId the group ID of this catalog template tag
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this catalog template tag.
	 *
	 * @return the company ID of this catalog template tag
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this catalog template tag.
	 *
	 * @param companyId the company ID of this catalog template tag
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the tag of this catalog template tag.
	 *
	 * @return the tag of this catalog template tag
	 */
	@AutoEscape
	public String getTag();

	/**
	 * Sets the tag of this catalog template tag.
	 *
	 * @param tag the tag of this catalog template tag
	 */
	public void setTag(String tag);

	/**
	 * Returns the repeatable of this catalog template tag.
	 *
	 * @return the repeatable of this catalog template tag
	 */
	public boolean getRepeatable();

	/**
	 * Returns <code>true</code> if this catalog template tag is repeatable.
	 *
	 * @return <code>true</code> if this catalog template tag is repeatable; <code>false</code> otherwise
	 */
	public boolean isRepeatable();

	/**
	 * Sets whether this catalog template tag is repeatable.
	 *
	 * @param repeatable the repeatable of this catalog template tag
	 */
	public void setRepeatable(boolean repeatable);

	/**
	 * Returns the mandatory of this catalog template tag.
	 *
	 * @return the mandatory of this catalog template tag
	 */
	public boolean getMandatory();

	/**
	 * Returns <code>true</code> if this catalog template tag is mandatory.
	 *
	 * @return <code>true</code> if this catalog template tag is mandatory; <code>false</code> otherwise
	 */
	public boolean isMandatory();

	/**
	 * Sets whether this catalog template tag is mandatory.
	 *
	 * @param mandatory the mandatory of this catalog template tag
	 */
	public void setMandatory(boolean mandatory);

	/**
	 * Returns the help text of this catalog template tag.
	 *
	 * @return the help text of this catalog template tag
	 */
	@AutoEscape
	public String getHelpText();

	/**
	 * Sets the help text of this catalog template tag.
	 *
	 * @param helpText the help text of this catalog template tag
	 */
	public void setHelpText(String helpText);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.kencana.lms.model.CatalogTemplateTag catalogTemplateTag);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.CatalogTemplateTag> toCacheModel();

	@Override
	public com.kencana.lms.model.CatalogTemplateTag toEscapedModel();

	@Override
	public com.kencana.lms.model.CatalogTemplateTag toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}