/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the MarcBatchUploadItem service. Represents a row in the &quot;Kencana_MarcBatchUploadItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.MarcBatchUploadItemModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.MarcBatchUploadItemImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see MarcBatchUploadItem
 * @see com.kencana.lms.model.impl.MarcBatchUploadItemImpl
 * @see com.kencana.lms.model.impl.MarcBatchUploadItemModelImpl
 * @generated
 */
public interface MarcBatchUploadItemModel extends BaseModel<MarcBatchUploadItem> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a marc batch upload item model instance should use the {@link MarcBatchUploadItem} interface instead.
	 */

	/**
	 * Returns the primary key of this marc batch upload item.
	 *
	 * @return the primary key of this marc batch upload item
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this marc batch upload item.
	 *
	 * @param primaryKey the primary key of this marc batch upload item
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the marc batch upload item ID of this marc batch upload item.
	 *
	 * @return the marc batch upload item ID of this marc batch upload item
	 */
	public long getMarcBatchUploadItemId();

	/**
	 * Sets the marc batch upload item ID of this marc batch upload item.
	 *
	 * @param marcBatchUploadItemId the marc batch upload item ID of this marc batch upload item
	 */
	public void setMarcBatchUploadItemId(long marcBatchUploadItemId);

	/**
	 * Returns the marc batch upload ID of this marc batch upload item.
	 *
	 * @return the marc batch upload ID of this marc batch upload item
	 */
	public long getMarcBatchUploadId();

	/**
	 * Sets the marc batch upload ID of this marc batch upload item.
	 *
	 * @param marcBatchUploadId the marc batch upload ID of this marc batch upload item
	 */
	public void setMarcBatchUploadId(long marcBatchUploadId);

	/**
	 * Returns the group ID of this marc batch upload item.
	 *
	 * @return the group ID of this marc batch upload item
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this marc batch upload item.
	 *
	 * @param groupId the group ID of this marc batch upload item
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this marc batch upload item.
	 *
	 * @return the company ID of this marc batch upload item
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this marc batch upload item.
	 *
	 * @param companyId the company ID of this marc batch upload item
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the created by of this marc batch upload item.
	 *
	 * @return the created by of this marc batch upload item
	 */
	public long getCreatedBy();

	/**
	 * Sets the created by of this marc batch upload item.
	 *
	 * @param createdBy the created by of this marc batch upload item
	 */
	public void setCreatedBy(long createdBy);

	/**
	 * Returns the created date of this marc batch upload item.
	 *
	 * @return the created date of this marc batch upload item
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this marc batch upload item.
	 *
	 * @param createdDate the created date of this marc batch upload item
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the processed of this marc batch upload item.
	 *
	 * @return the processed of this marc batch upload item
	 */
	public boolean getProcessed();

	/**
	 * Returns <code>true</code> if this marc batch upload item is processed.
	 *
	 * @return <code>true</code> if this marc batch upload item is processed; <code>false</code> otherwise
	 */
	public boolean isProcessed();

	/**
	 * Sets whether this marc batch upload item is processed.
	 *
	 * @param processed the processed of this marc batch upload item
	 */
	public void setProcessed(boolean processed);

	/**
	 * Returns the import date of this marc batch upload item.
	 *
	 * @return the import date of this marc batch upload item
	 */
	public Date getImportDate();

	/**
	 * Sets the import date of this marc batch upload item.
	 *
	 * @param importDate the import date of this marc batch upload item
	 */
	public void setImportDate(Date importDate);

	/**
	 * Returns the import by user ID of this marc batch upload item.
	 *
	 * @return the import by user ID of this marc batch upload item
	 */
	public long getImportByUserId();

	/**
	 * Sets the import by user ID of this marc batch upload item.
	 *
	 * @param importByUserId the import by user ID of this marc batch upload item
	 */
	public void setImportByUserId(long importByUserId);

	/**
	 * Returns the import by user uuid of this marc batch upload item.
	 *
	 * @return the import by user uuid of this marc batch upload item
	 * @throws SystemException if a system exception occurred
	 */
	public String getImportByUserUuid() throws SystemException;

	/**
	 * Sets the import by user uuid of this marc batch upload item.
	 *
	 * @param importByUserUuid the import by user uuid of this marc batch upload item
	 */
	public void setImportByUserUuid(String importByUserUuid);

	/**
	 * Returns the marc content of this marc batch upload item.
	 *
	 * @return the marc content of this marc batch upload item
	 */
	@AutoEscape
	public String getMarcContent();

	/**
	 * Sets the marc content of this marc batch upload item.
	 *
	 * @param marcContent the marc content of this marc batch upload item
	 */
	public void setMarcContent(String marcContent);

	/**
	 * Returns the file name of this marc batch upload item.
	 *
	 * @return the file name of this marc batch upload item
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this marc batch upload item.
	 *
	 * @param fileName the file name of this marc batch upload item
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the file entry ID of this marc batch upload item.
	 *
	 * @return the file entry ID of this marc batch upload item
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this marc batch upload item.
	 *
	 * @param fileEntryId the file entry ID of this marc batch upload item
	 */
	public void setFileEntryId(long fileEntryId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.kencana.lms.model.MarcBatchUploadItem marcBatchUploadItem);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.MarcBatchUploadItem> toCacheModel();

	@Override
	public com.kencana.lms.model.MarcBatchUploadItem toEscapedModel();

	@Override
	public com.kencana.lms.model.MarcBatchUploadItem toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}