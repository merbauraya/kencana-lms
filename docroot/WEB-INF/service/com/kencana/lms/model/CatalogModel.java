/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kencana.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Catalog service. Represents a row in the &quot;Kencana_Catalog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kencana.lms.model.impl.CatalogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kencana.lms.model.impl.CatalogImpl}.
 * </p>
 *
 * @author Mazlan Mat
 * @see Catalog
 * @see com.kencana.lms.model.impl.CatalogImpl
 * @see com.kencana.lms.model.impl.CatalogModelImpl
 * @generated
 */
public interface CatalogModel extends BaseModel<Catalog>, GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a catalog model instance should use the {@link Catalog} interface instead.
	 */

	/**
	 * Returns the primary key of this catalog.
	 *
	 * @return the primary key of this catalog
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this catalog.
	 *
	 * @param primaryKey the primary key of this catalog
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the catalog ID of this catalog.
	 *
	 * @return the catalog ID of this catalog
	 */
	public long getCatalogId();

	/**
	 * Sets the catalog ID of this catalog.
	 *
	 * @param catalogId the catalog ID of this catalog
	 */
	public void setCatalogId(long catalogId);

	/**
	 * Returns the company ID of this catalog.
	 *
	 * @return the company ID of this catalog
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this catalog.
	 *
	 * @param companyId the company ID of this catalog
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this catalog.
	 *
	 * @return the group ID of this catalog
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this catalog.
	 *
	 * @param groupId the group ID of this catalog
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this catalog.
	 *
	 * @return the user ID of this catalog
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this catalog.
	 *
	 * @param userId the user ID of this catalog
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this catalog.
	 *
	 * @return the user uuid of this catalog
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this catalog.
	 *
	 * @param userUuid the user uuid of this catalog
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this catalog.
	 *
	 * @return the user name of this catalog
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this catalog.
	 *
	 * @param userName the user name of this catalog
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the created by user ID of this catalog.
	 *
	 * @return the created by user ID of this catalog
	 */
	public long getCreatedByUserId();

	/**
	 * Sets the created by user ID of this catalog.
	 *
	 * @param createdByUserId the created by user ID of this catalog
	 */
	public void setCreatedByUserId(long createdByUserId);

	/**
	 * Returns the created by user uuid of this catalog.
	 *
	 * @return the created by user uuid of this catalog
	 * @throws SystemException if a system exception occurred
	 */
	public String getCreatedByUserUuid() throws SystemException;

	/**
	 * Sets the created by user uuid of this catalog.
	 *
	 * @param createdByUserUuid the created by user uuid of this catalog
	 */
	public void setCreatedByUserUuid(String createdByUserUuid);

	/**
	 * Returns the create date of this catalog.
	 *
	 * @return the create date of this catalog
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this catalog.
	 *
	 * @param createDate the create date of this catalog
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this catalog.
	 *
	 * @return the modified date of this catalog
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this catalog.
	 *
	 * @param modifiedDate the modified date of this catalog
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the item type ID of this catalog.
	 *
	 * @return the item type ID of this catalog
	 */
	public long getItemTypeId();

	/**
	 * Sets the item type ID of this catalog.
	 *
	 * @param itemTypeId the item type ID of this catalog
	 */
	public void setItemTypeId(long itemTypeId);

	/**
	 * Returns the title of this catalog.
	 *
	 * @return the title of this catalog
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this catalog.
	 *
	 * @param title the title of this catalog
	 */
	public void setTitle(String title);

	/**
	 * Returns the author of this catalog.
	 *
	 * @return the author of this catalog
	 */
	@AutoEscape
	public String getAuthor();

	/**
	 * Sets the author of this catalog.
	 *
	 * @param author the author of this catalog
	 */
	public void setAuthor(String author);

	/**
	 * Returns the publisher of this catalog.
	 *
	 * @return the publisher of this catalog
	 */
	@AutoEscape
	public String getPublisher();

	/**
	 * Sets the publisher of this catalog.
	 *
	 * @param publisher the publisher of this catalog
	 */
	public void setPublisher(String publisher);

	/**
	 * Returns the isbn of this catalog.
	 *
	 * @return the isbn of this catalog
	 */
	@AutoEscape
	public String getIsbn();

	/**
	 * Sets the isbn of this catalog.
	 *
	 * @param isbn the isbn of this catalog
	 */
	public void setIsbn(String isbn);

	/**
	 * Returns the issn of this catalog.
	 *
	 * @return the issn of this catalog
	 */
	@AutoEscape
	public String getIssn();

	/**
	 * Sets the issn of this catalog.
	 *
	 * @param issn the issn of this catalog
	 */
	public void setIssn(String issn);

	/**
	 * Returns the call number of this catalog.
	 *
	 * @return the call number of this catalog
	 */
	@AutoEscape
	public String getCallNumber();

	/**
	 * Sets the call number of this catalog.
	 *
	 * @param callNumber the call number of this catalog
	 */
	public void setCallNumber(String callNumber);

	/**
	 * Returns the u u i d of this catalog.
	 *
	 * @return the u u i d of this catalog
	 */
	@AutoEscape
	public String getUUID();

	/**
	 * Sets the u u i d of this catalog.
	 *
	 * @param UUID the u u i d of this catalog
	 */
	public void setUUID(String UUID);

	/**
	 * Returns the catalog abstract of this catalog.
	 *
	 * @return the catalog abstract of this catalog
	 */
	@AutoEscape
	public String getCatalogAbstract();

	/**
	 * Sets the catalog abstract of this catalog.
	 *
	 * @param catalogAbstract the catalog abstract of this catalog
	 */
	public void setCatalogAbstract(String catalogAbstract);

	/**
	 * Returns the template ID of this catalog.
	 *
	 * @return the template ID of this catalog
	 */
	public long getTemplateId();

	/**
	 * Sets the template ID of this catalog.
	 *
	 * @param templateId the template ID of this catalog
	 */
	public void setTemplateId(long templateId);

	/**
	 * Returns the visible of this catalog.
	 *
	 * @return the visible of this catalog
	 */
	public boolean getVisible();

	/**
	 * Returns <code>true</code> if this catalog is visible.
	 *
	 * @return <code>true</code> if this catalog is visible; <code>false</code> otherwise
	 */
	public boolean isVisible();

	/**
	 * Sets whether this catalog is visible.
	 *
	 * @param visible the visible of this catalog
	 */
	public void setVisible(boolean visible);

	/**
	 * Returns the cover image ID of this catalog.
	 *
	 * @return the cover image ID of this catalog
	 */
	public long getCoverImageId();

	/**
	 * Sets the cover image ID of this catalog.
	 *
	 * @param coverImageId the cover image ID of this catalog
	 */
	public void setCoverImageId(long coverImageId);

	/**
	 * Returns the marc of this catalog.
	 *
	 * @return the marc of this catalog
	 */
	@AutoEscape
	public String getMarc();

	/**
	 * Sets the marc of this catalog.
	 *
	 * @param marc the marc of this catalog
	 */
	public void setMarc(String marc);

	/**
	 * Returns the workflow status of this catalog.
	 *
	 * @return the workflow status of this catalog
	 */
	public int getWorkflowStatus();

	/**
	 * Sets the workflow status of this catalog.
	 *
	 * @param workflowStatus the workflow status of this catalog
	 */
	public void setWorkflowStatus(int workflowStatus);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.kencana.lms.model.Catalog catalog);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kencana.lms.model.Catalog> toCacheModel();

	@Override
	public com.kencana.lms.model.Catalog toEscapedModel();

	@Override
	public com.kencana.lms.model.Catalog toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}